---
name: Code Scanning

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]
    paths-ignore:
      - '**/*.md'
  schedule:
    - cron: "0 0 * * 0"

permissions:
  actions: read  # for github/codeql-action/init to get workflow details
  contents: read  # for actions/checkout to fetch code
  security-events: write  # for github/codeql-action/analyze to upload SARIF results

jobs:
  semgrep:
    runs-on: ubuntu-latest
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci
        env:
          # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable.
          SEMGREP_RULES: p/default # more at semgrep.dev/explore

  gosec:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Go version from go.mod
        id: get-go-version
        shell: bash
        run: |
          sed -En 's/^go (.*)$/go-version=\1/p' go.mod >> $GITHUB_OUTPUT

      - name: Set up Go version ${{ steps.get-go-version.outputs.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.get-go-version.outputs.go-version }}

      - name: Restore Go modules cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: go-${{ runner.os }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            go-${{ runner.os }}-

      - name: Make sure reports path exists
        run: |
          mkdir -vp reports

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -fmt sarif -out reports/results.sarif ./...'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: reports/results.sarif

#   CodeQL-Build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out code
#         uses: actions/checkout@v3

#       - name: Initialize CodeQL
#         uses: github/codeql-action/init@v2
#         with:
#           languages: go
#           queries: security-and-quality

#       - name: Build code
#         run: |
#           make build

#       - name: Perform CodeQL Analysis
#         uses: github/codeql-action/analyze@v2
